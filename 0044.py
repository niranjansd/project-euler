


# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
# The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
# and D = |Pk − Pj| is minimised; what is the value of D?

import enum
import numpy as np
pents = []
for n in range(1, 10000):
    pents.append(n*(3*n-1)/2)
# print(pents[:100])

pairs = []
# for i, pi in enumerate(pents):
for i in range(len(pents)):
    pi = pents[i]
    skip = False
    # if not i%1000:
    #     print(i, pi)
    for j in range(i, len(pents)-1):
        pj = pents[j]
        # if not j%1000:
        #     print(j, pj)
        if pi+pj < pents[j+1]:
            skip=True
        if pj-pi > pents[j-1]:
            skip=True
        if np.absolute(pj-pi) in pents:
            if pi+pj in pents:
                pairs.append([pj-pi, pi, pj])
        if skip:
            break

print(sorted(pairs))


