# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
# The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
# However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk,
# for which their sum and difference are pentagonal
# and D = |Pk − Pj| is minimised; what is the value of D?

import time
import enum
import numpy as np
pents = []
for n in range(1, 1000000):
    pents.append(int(n*(3*n-1)/2))
print(pents[:10], pents[-1])

def is_pentagonal(n): return (1+np.sqrt(1+24*n))%6==0
pents = np.array(pents)

works = False
for i, p1 in enumerate(pents):
    for j, p2 in enumerate(pents[:i]):
        if is_pentagonal(p1+p2) and is_pentagonal(p1-p2):
            print(p1, p2, p1-p2, p1+p2)
            works = True
            break
        if not i % 100000:
            print(i, p1, p2, p1-p2, p1+p2)
    if works:
        break
